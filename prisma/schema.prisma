// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Color {
  BROWN
  LIGHTBLUE
  PINK
  ORANGE
  RED
  YELLOW
  GREEN
  BLUE
}

enum Cardtype {
  CHANCE
  COMMUNITYCHEST
}

// NOTE: Mortgages are half the price of any buyable value

model Property {
  id    Int    @id @unique // ID corresponds to the spot on the board
  name  String @unique
  color Color // This could be an Enum?
  price Int
  rent  Int[]
}

model Houses {
  color Color @unique
  price Int
}

model Railroad {
  id    Int    @id @unique // Cannot be Sequential
  name  String @unique
  price Int
  rent  Int[]
}

model Utilities {
  id    Int    @id @unique
  name  String @unique
  price Int
  rent  Int[]
}

model Special {
  id          Int    @id @unique
  name        String @unique
  description String
}

model Drawable {
  id   Int      @id @unique
  type Cardtype
}

model Card {
  id          Int      @id @default(autoincrement())
  type        Cardtype
  description String   @unique
}

model Game {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  players  Player[]
  UserData UserData @relation(fields: [username], references: [username])
  username String

  @@index([username])
}

model Player {
  id      Int     @id @default(autoincrement())
  game    Game    @relation(fields: [game_id], references: [id])
  game_id Int
  name    String
  owned   Owned[]

  @@index([game_id])
}

model Owned {
  id        Int    @id @default(autoincrement())
  player    Player @relation(fields: [player_id], references: [id])
  player_id Int
  name      String
  houses    Int?

  @@index([player_id])
}

model UserData {
  id       String @id @default(cuid())
  username String @unique
  games    Game[]
}

model User {
  id           String    @id @unique
  auth_session Session[]
  key          Key[]
  username     String
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
